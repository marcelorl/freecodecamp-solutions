let debounce;

class App extends React.Component {
  constructor () {
    super();
    
    this.state = {
      keyword: '',
      result: []
    };
    
    this.onSearch = this.onSearch.bind(this);
  }
  
  onSearch (el) {
    const keyword = el.target.value;
    
    if (!keyword) {
      this.setState({result: []});
      return;
    }
    
    clearTimeout(debounce);
    
    this.setState({ keyword });
    debounce = setTimeout(() => {

      $.getJSON(`https://en.wikipedia.org/w/api.php?format=json&action=query&generator=search&gsrsearch=${keyword}&prop=extracts&exintro&explaintext&exsentences=1&exlimit=max&callback=?`)
        .then(res => {
          const result = res.query.pages;       
          this.setState({
            result: Object.keys(result).map(id => result[id])
          });
      });
    }, 1000);
  }
  
  render () {
    return (
      <div className="container-fluid">
        <div className="text-center jumbotron d-flex flex-column mt-3">
          <h2 className="display-4">Wikipedia Viewer</h2>
          <div className="d-flex flex-column">
            <input onChange={this.onSearch} />
            <a target="_blank" className="mt-2 mb-2" href="https://en.wikipedia.org/wiki/Special:Random">Fellin Lucky</a>
          </div>
          
          <ul className="list-group">
            {this.state.result.map((item, key) => {
              return (
                <li className="text-left list-group-item list-group-item-action" key={item.index}>
                  <a className="text-dark" href={`https://en.wikipedia.org/?curid=${item.index}`} target="_blank">
                    <div className="font-weight-bold">{item.title}</div>
                  <div className="font-weight-light">{item.extract}</div>
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      </div>
    );
  }
}

ReactDOM.render(
  <App />,
  document.getElementById('root')
);
